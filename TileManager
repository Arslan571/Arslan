using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class TileManager : MonoBehaviour
{
    public GameObject[] TilePrefabs;

    private Transform PlayerTransform;

    private float SpawnZ = -6.0f;

    private float TileLength = 30.0f;

    private float SafeZone = 30.0f;

    private int AmnTilesOnScreen = 7;

    private int LastPrefabIndex = 0;

    private List<GameObject> ActiveTiles;

    private void Start()
    {
        ActiveTiles = new List<GameObject>();
        PlayerTransform = GameObject.FindGameObjectWithTag("Player").transform;

        for (int i = 0; i < AmnTilesOnScreen; i++) {
            if (i < 2)
                SpawnTile(0);
            else
                SpawnTile();
        }
    }


    private void Update()
    {
        if (PlayerTransform.position.z - SafeZone> (SpawnZ - AmnTilesOnScreen * TileLength)) {
            SpawnTile();
            DeleteTile();
        }
    }
        
        private void SpawnTile(int PrefabIndex = -1) 
        {
        GameObject go;

        if (PrefabIndex == -1)
            go = Instantiate(TilePrefabs[RandomPrefabIndex()]) as GameObject;
        else
            go = Instantiate(TilePrefabs[PrefabIndex]) as GameObject;

        go.transform.SetParent(transform);
        go.transform.position = Vector3.forward * SpawnZ;
        SpawnZ += TileLength;
        ActiveTiles.Add(go);
        }
    
        private void DeleteTile()
    {

        Destroy(ActiveTiles[0]);
        ActiveTiles.RemoveAt(0);
    }

    private int RandomPrefabIndex()
    {
        if(TilePrefabs.Length <= 1)
        {
            return 0;
        }

        int RandomIndex = LastPrefabIndex;
        while(RandomIndex == LastPrefabIndex)
        {
            RandomIndex = Random.Range(0, TilePrefabs.Length);
        }
        LastPrefabIndex = RandomIndex;
        return RandomIndex;
    }
}
